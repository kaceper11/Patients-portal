@model PatientsPortalModel.ViewModels.UserViewModels.CreateUserViewModel
@{
    ViewBag.Title = "Użytkownicy";
}

<div class="row page-box">
    <div class="col-sm-12">
        <h2>Nowy użytkownik</h2>
        @using (Html.BeginForm("Create"))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.UserName)
                @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName)
                @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName)
                @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email)
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.MobileNumber)
                @Html.EditorFor(m => m.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.MobileNumber, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.BirthDate)
                <div class="input-group">
                    @Html.EditorFor(m => m.BirthDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Gender)

                <div class="form-group">
                    @Html.RadioButtonFor(m => m.Gender, "Mężczyzna")
                    @Html.Label("Mężczyzna", new { htmlAttributes = new { @class = "radio-inline" } })
                    @Html.RadioButtonFor(m => m.Gender, "Kobieta")
                    @Html.Label("Kobieta", new { htmlAttributes = new { @class = "radio-inline" } })
                </div>
                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Pesel)
                @Html.EditorFor(m => m.Pesel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Pesel, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(model => model.TermsApproved)
                @Html.LabelFor(model => model.TermsApproved)
                @Html.ValidationMessageFor(model => model.TermsApproved, "", new { @class = "text-danger" })
            </div>
            <div class="form-group user-roles">
                @Html.LabelFor(m => m.RoleId)
                @Html.DropDownListFor(m => m.RoleId,
                    Model.Roles.Select(c => new SelectListItem
                    {
                        Text = c.RoleName, Value = c.RoleId.ToString()
                    }),
                    new { @class = "form-control", @id = "user-roles"})
                @Html.ValidationMessageFor(m => m.RoleId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group doctor-attributes k-invisible">
                <div class="form-group">
                    @Html.LabelFor(m => m.Specialization)
                    @Html.EditorFor(m => m.Specialization, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Specialization, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Dodaj</button>
            </div>
        }
    </div>
</div>

